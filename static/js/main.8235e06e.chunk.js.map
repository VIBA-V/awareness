{"version":3,"sources":["components/layout/images/doc.png","components/layout/images/dist.png","components/layout/images/work.png","components/layout/images/9.png","components/layout/images/3.png","components/layout/images/4.png","components/layout/images/5.png","components/layout/images/6.png","components/layout/images/7.png","components/layout/images/8.png","components/layout/images/trophy.jpg","components/layout/images/1.png","components/layout/images/preqs.jpg","components/layout/veere/index.js","components/Home.js","components/layout/utils/Timer.js","components/layout/Result.js","components/layout/Quizz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AOS","init","Veere","className","style","height","data-aos","data-aos-duration","Button","variant","color","fontSize","to","textDecoration","Home","Timer","props","state","seconds","this","duration","timeoutFn","setState","prevState","interval","setInterval","tick","clearInterval","timeLeft","React","Component","Result","score","userName","email","Grid","container","sm","xs","backgroundColor","padding","borderRadius","spacing","item","Paper","elevation","src","trophy","alt","Typography","textAlign","calssName","margin","fontWeight","marginTop","data","map","ques","index","question","answer","steps","useStyles","makeStyles","theme","root","image","marginLeft","width","paper","display","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","large","left","position","roots","Width","flexGrow","TextMobileStepper","classes","useTheme","userData","useState","activeStep","setActiveStep","options","setAnswer","selected","setSelected","setScore","scores","setScores","responce","setResponce","result","setResult","username","mobile","collage","register","setRegister","maxSteps","length","images","img1","img8","img2","img3","img4","img5","img6","img7","bimg","doc","work","dist","datas","JSON","stringify","push","console","log","updateField","e","target","name","value","component","CssBaseline","md","preq","square","Avatar","onSubmit","preventDefault","noValidate","TextField","required","fullWidth","id","label","onChange","autoFocus","type","autoComplete","onClick","option","key","MobileStepper","bottom","nextButton","size","prevActiveStep","disabled","direction","backButton","Title","App","path","exact","rootElement","document","getElementById","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8235e06e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/doc.1a99f1f2.png\";","module.exports = __webpack_public_path__ + \"static/media/dist.360c127b.png\";","module.exports = __webpack_public_path__ + \"static/media/work.63b9077f.png\";","module.exports = __webpack_public_path__ + \"static/media/9.ac44dcb7.png\";","module.exports = __webpack_public_path__ + \"static/media/3.931b72a4.png\";","module.exports = __webpack_public_path__ + \"static/media/4.d0ca634d.png\";","module.exports = __webpack_public_path__ + \"static/media/5.c6fe9acf.png\";","module.exports = __webpack_public_path__ + \"static/media/6.d62ac808.png\";","module.exports = __webpack_public_path__ + \"static/media/7.454e41fd.png\";","module.exports = __webpack_public_path__ + \"static/media/8.a7cdb04a.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.1f44d174.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.e6b6afa9.png\";","module.exports = __webpack_public_path__ + \"static/media/preqs.5a4b547f.jpg\";","import React from \"react\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"../veere/style120.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nAOS.init();\r\nconst Veere = () => {\r\n  return (\r\n    <div className=\"veere\" style={{ height: \"100vh\" }}>\r\n      <div className=\"ayyo\" data-aos=\"fade-down\" data-aos-duration=\"2000\">\r\n        <h1>PROTECT YOURSELF & OTHERS</h1>\r\n        <h2>SO SPREAD AWARENESS</h2>\r\n        <h2>NOT VIRUS</h2>\r\n        <Button variant=\"contained\" color=\"secondary\" fontSize=\"large\">\r\n          <Link\r\n            to=\"/awareness/Quizz\"\r\n            style={{ textDecoration: \"none\", color: \"#FFFFFF\" }}\r\n          >\r\n            Quizz Time\r\n          </Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Veere;\r\n","import React from \"react\";\r\n/* import Landing from \"./layout/Landing\"; */\r\n/* import Quizz from \"./layout/Quizz\"; */\r\n\r\nimport Veere from \"./layout/veere/index\";\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <Veere />\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../layout.css\";\r\n\r\nexport default class Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      seconds: 0,\r\n    };\r\n  }\r\n\r\n  tick() {\r\n    const { duration, timeoutFn } = this.props;\r\n    if (this.state.seconds === duration) {\r\n      timeoutFn();\r\n    } else {\r\n      this.setState((prevState) => ({\r\n        seconds: prevState.seconds + 1,\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    const { duration } = this.props;\r\n    let timeLeft = duration - this.state.seconds;\r\n    return (\r\n      <div className=\"timer\">\r\n        <h1>\r\n          Time Left: <span>{timeLeft}</span> S\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./layout.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport trophy from \"./images/trophy.jpg\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport data from \"../data.json\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Result = ({ score, userName, email }) => (\r\n  <div className=\"grids\">\r\n    <Grid\r\n      container\r\n      sm={12}\r\n      xs={12}\r\n      style={{\r\n        backgroundColor: \"#FFFFFF\",\r\n        padding: \"3vh\",\r\n        borderRadius: \"16px\",\r\n      }}\r\n      spacing={12}\r\n    >\r\n      <Grid item sm={7} xs={12} className=\"trophy\">\r\n        <Grid container sm={12} spacing={5}>\r\n          <Grid item sm={12} xs={12}>\r\n            <Paper elevation={0} className=\"images\">\r\n              <img src={trophy} alt=\"Trophy\" />\r\n              <Typography\r\n                variant=\"h4\"\r\n                style={{ color: \"#422057FF\", textAlign: \"center\" }}\r\n              >\r\n                CONGRATULATIONS...!\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item sm={12} xs={12} calssName=\"grids2\">\r\n            <Paper elevation={5} className=\"score\" style={{ padding: \"2vh\" }}>\r\n              <h1>\r\n                {userName} Your Score is : {score}\r\n              </h1>\r\n              <h2>\r\n                {score < 5 ? (\r\n                  <Typography variant=\"h3\" style={{ margin: \"1vh\" }}>\r\n                    Beaware of COVID-19 no\r\n                  </Typography>\r\n                ) : score < 10 ? (\r\n                  <Typography\r\n                    variant=\"h3\"\r\n                    style={{ margin: \"1vh\", color: \"#f93822ff\" }}\r\n                  >\r\n                    Well Done...! Participation\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography variant=\"h3\" style={{ margin: \"1vh\" }}>\r\n                    Great...! Merit\r\n                  </Typography>\r\n                )}\r\n                Certificate is sent to {email}\r\n              </h2>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"1vh\" }}\r\n              >\r\n                Download Certificate\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item sm={5} xs={12} className=\"grids3\">\r\n        <Paper className=\"box\" elevation={0}>\r\n          <Typography\r\n            variant=\"h3\"\r\n            style={{\r\n              color: \"#422057FF\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              marginTop: \"3vh\",\r\n              color: \"orange\",\r\n            }}\r\n          >\r\n            Review Questions\r\n          </Typography>\r\n          {data.map((ques, index) => (\r\n            <Paper elevation={5} className=\"review\">\r\n              <Typography variant=\"h4\" style={{ margin: \"1vh\" }}>\r\n                {index + 1} {ques.question}\r\n              </Typography>\r\n              <Typography variant=\"h5\">Ans. {ques.answer}</Typography>\r\n            </Paper>\r\n          ))}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  </div>\r\n);\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Timer from \"./utils/Timer\";\r\nimport { makeStyles, useTheme, useEffect } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ArrowBackIosRoundedIcon from \"@material-ui/icons/ArrowBackIosRounded\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport data from \"../data.json\";\r\nimport Result from \"./Result\";\r\nimport \"./layout.css\";\r\nimport img1 from \"./images/1.png\";\r\nimport img2 from \"./images/9.png\";\r\nimport img3 from \"./images/3.png\";\r\nimport img4 from \"./images/4.png\";\r\nimport img5 from \"./images/5.png\";\r\nimport img6 from \"./images/6.png\";\r\nimport img7 from \"./images/7.png\";\r\nimport img8 from \"./images/8.png\";\r\nimport doc from \"./images/doc.png\";\r\nimport dist from \"./images/dist.png\";\r\nimport work from \"./images/work.png\";\r\nimport preq from \"./images/preqs.jpg\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nconst steps = data;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  image: {\r\n    marginLeft: \"12%\",\r\n    marginTop: \"7%\",\r\n    width: \"70%\",\r\n    height: \"70\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    marginTop: \"-6vh\",\r\n    left: \"39%\",\r\n    position: \"absolute\",\r\n    backgroundColor: \"#FFFFFF\",\r\n  },\r\n  roots: {\r\n    Width: 400,\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function TextMobileStepper() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const userData = [];\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [answer, setAnswer] = React.useState(steps[activeStep].options);\r\n  const [selected, setSelected] = React.useState(null);\r\n  const [score, setScore] = React.useState(0);\r\n  const [scores, setScores] = React.useState(0);\r\n  const [responce, setResponce] = React.useState(0);\r\n  const [result, setResult] = React.useState(true);\r\n  const [form, setState] = React.useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    collage: \"\",\r\n    state: \"\",\r\n  });\r\n  const [register, setRegister] = React.useState(true);\r\n  const maxSteps = steps.length;\r\n  const images = [\r\n    img1,\r\n    img8,\r\n    img2,\r\n    img3,\r\n    img4,\r\n    img5,\r\n    img6,\r\n    img7,\r\n    img8,\r\n    img2,\r\n    img3,\r\n    img4,\r\n    img5,\r\n    img6,\r\n    img7,\r\n  ];\r\n  const bimg = [\r\n    doc,\r\n    doc,\r\n    doc,\r\n    doc,\r\n    doc,\r\n    work,\r\n    work,\r\n    work,\r\n    work,\r\n    work,\r\n    dist,\r\n    dist,\r\n    dist,\r\n    dist,\r\n    dist,\r\n  ];\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setAnswer(steps[activeStep + 1].options);\r\n    setSelected(null);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setAnswer(steps[activeStep].options);\r\n    setSelected(null);\r\n    setScore(scores - 1);\r\n    setResponce((responce) => responce - 1);\r\n  };\r\n  const handleClick = (select) => {\r\n    if (select === steps[activeStep].answer) {\r\n      setScore((score) => score + 1);\r\n      setScores(score + 1);\r\n    }\r\n    setResponce(responce < 15 ? responce + 1 : 15);\r\n  };\r\n\r\n  let datas = JSON.stringify(form);\r\n  userData.push(datas);\r\n\r\n  const printValues = (e) => {\r\n    e.preventDefault();\r\n    setRegister(true);\r\n  };\r\n  console.log(userData);\r\n\r\n  const updateField = (e) => {\r\n    setState({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const timeoutFn = () => {\r\n    setResult(false);\r\n  };\r\n  console.log(result);\r\n  return (\r\n    <div>\r\n      {register ? (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n          <Grid item xs={false} sm={4} md={7}>\r\n            <img src={preq} alt=\"precautions\" className={classes.image} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n            className=\"login\"\r\n          >\r\n            <div className={classes.paper} style={{ fontSize: \"3vh\" }}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon fontSize=\"large\" />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h4\">\r\n                Register here for Certification\r\n              </Typography>\r\n              <form className={classes.form} onSubmit={printValues} noValidate>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"Name\"\r\n                  label=\"Name\"\r\n                  value={form.username}\r\n                  name=\"username\"\r\n                  onChange={updateField}\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  value={form.email}\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  onChange={updateField}\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"mobile\"\r\n                  label=\"Mobile\"\r\n                  value={form.mobile}\r\n                  name=\"mobile\"\r\n                  type=\"number\"\r\n                  onChange={updateField}\r\n                  autoFocus\r\n                />\r\n\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"collage\"\r\n                  label=\"Collage\"\r\n                  name=\"college\"\r\n                  onChange={updateField}\r\n                  autoFocus\r\n                />\r\n\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"state\"\r\n                  label=\"State\"\r\n                  name=\"state\"\r\n                  onChange={updateField}\r\n                  autoFocus\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={() => setRegister(false)}\r\n                >\r\n                  GET IN\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      ) : result ? (\r\n        <div>\r\n          <Grid container xs={12} className=\"mroot\">\r\n            <Grid item xs className=\"root\">\r\n              <Grid container xs={12}>\r\n                <Grid item xs={1}>\r\n                  <div className=\"arrow\">\r\n                    <Link to=\"/\">\r\n                      <ArrowBackIosRoundedIcon\r\n                        style={{ fontSize: \"4.5vh\", color: \"#422057FF\" }}\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <div className=\"arrow\">\r\n                    <h2>\r\n                      <bold style={{ color: \"#F93822FF\", fontSize: \"5vh\" }}>\r\n                        #\r\n                      </bold>\r\n                      {\"  \"}COVID Quizz\r\n                    </h2>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <div className=\"arrow\">\r\n                    <button className=\"but\" onClick={() => setResult(false)}>\r\n                      Submit\r\n                    </button>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Paper square elevation={5} className=\"card\">\r\n                    <Avatar\r\n                      alt=\"COVID\"\r\n                      src={images[activeStep]}\r\n                      className={classes.large}\r\n                    />\r\n                    <div>\r\n                      <Timer duration={600} timeoutFn={() => timeoutFn} />\r\n                    </div>\r\n\r\n                    <div className=\"header\">\r\n                      <h1 style={{ color: \"#422057FF\" }}>\r\n                        Question {activeStep + 1}\r\n                      </h1>\r\n                      <div className=\"line\"></div>\r\n                      <h1>{steps[activeStep].question}</h1>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                      {answer.map((option, id) => (\r\n                        <li\r\n                          key={id}\r\n                          onClick={() => {\r\n                            setAnswer([option]);\r\n                            setSelected(option);\r\n                            handleClick(option);\r\n                          }}\r\n                        >\r\n                          {id + 1}. {option}\r\n                        </li>\r\n                      ))}\r\n                    </div>\r\n                    <MobileStepper\r\n                      steps={maxSteps}\r\n                      variant=\"text\"\r\n                      activeStep={activeStep}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: 0,\r\n                        backgroundColor: \"#FFFFFF\",\r\n                        borderRadius: \"17px\",\r\n                        fontSize: \"2vh\",\r\n                      }}\r\n                      nextButton={\r\n                        <Button\r\n                          size=\"larger\"\r\n                          onClick={handleNext}\r\n                          disabled={activeStep === maxSteps - 1}\r\n                        >\r\n                          <h1>Next</h1>\r\n                          {theme.direction === \"rtl\" ? (\r\n                            <KeyboardArrowLeft />\r\n                          ) : (\r\n                            <KeyboardArrowRight />\r\n                          )}\r\n                        </Button>\r\n                      }\r\n                      backButton={\r\n                        <Button\r\n                          size=\"larger\"\r\n                          onClick={handleBack}\r\n                          disabled={selected === null}\r\n                        >\r\n                          {theme.direction === \"rtl\" ? (\r\n                            <KeyboardArrowRight />\r\n                          ) : (\r\n                            <KeyboardArrowLeft />\r\n                          )}\r\n                          <h1>Back</h1>\r\n                        </Button>\r\n                      }\r\n                    />\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={7} className=\"grid2\">\r\n              <h1>{steps[activeStep].Title}</h1>\r\n              <img src={bimg[activeStep]} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Result score={score} userName={form.username} email={form.email} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Home from \"./components/Home\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Quizz from \"./components/layout/Quizz\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/awareness/Quizz\">\n            <Quizz />\n          </Route>\n          <Route exact path=\"/awareness\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}